[sources.nginx]
  type = "file"
  include = ["/var/log/nginx/access.log"]
#  start_at_beginning = false
  read_from = "end"

[transforms.nginx_json_parser]
  type = "json_parser" # required
  inputs = ["nginx"] # required

[transforms.nginx_json_remove_fields]
  inputs = [ "nginx_json_parser" ]
  type   = "remove_fields"
  fields = ["args", "body_bytes_sent", "connection", "connection_requests", "file", "http_true_client_ip", "nginx_host", "nginx_status", "nginx_time", "request_id", "source_type", "upstream_connect_time", "upstream_header_time", "ssl_cipher"]

[transforms.nginx_replace_value]
  inputs = ["nginx_json_remove_fields"]
  type   = "remap"
  source = """

    if .gzip_ratio == "-" || .gzip_ratio == "" {
       .gzip_ratio = "0.0"
    } else {
      .gzip_ration = to_float!(.gzip_ratio) 
    }

    if .upstream_cache_status == "-" || .upstream_cache_status == "" {
       .upstream_cache_status = "Disable"
    }

    if .http_cf_connecting_ip == "-" || .http_cf_connecting_ip == "" {
       .http_cf_connecting_ip = "0.0.0.0"
    }

    if .http_x_forwarded_for == "-" || .http_x_forwarded_for == "" {
       .http_x_forwarded_for = "0.0.0.0"
    }

    if .http_x_forwarded_proto == "-" || .http_x_forwarded_proto == "" {
       .http_x_forwarded_proto = "http"
    }

    if .upstream == "-" || .upstream == "" {
       .upstream = "0.0.0.0"
    }

    if .http_cf_ipcountry == "-" || .http_cf_ipcountry == "" {
       .http_cf_ipcountry = "unknown"
    }

    if .http_referer == "-" || .http_referer == "" {
       .http_referer = "unknown"
    }

    if .http_x_current_version == "-" || .http_x_current_version == "" {
       .http_x_current_version = "unknown"
    }

    if .remote_user == "-" || .remote_user == "" {
       .remote_user = "no_user"
    }

    if .ssl_protocol == "-" || .ssl_protocol == "" {
       .ssl_protocol = "no_ssl"
    }

    if .upstream_response_length == "-" || .upstream_response_length == "" {
       .upstream_response_length = "0"
    }

    if .upstream_response_time == "-" || .upstream_response_time == "" {
       .upstream_response_time = "0.0"
    } else {
      .upstream_response_time = to_float!(.upstream_response_time)
    }

  """

[sinks.out]
  inputs = ["nginx_replace_value"]
  type = "console"
  encoding.codec = "json"

[sinks.clickhouse_nginx]
  type = "clickhouse"
  inputs = ["nginx_replace_value"]

  host = "http://clickhouse:8123"
  database = "vector"
  table = "nginx_1"
  auth.strategy = "basic"
  auth.user = "vector"
  auth.password = "vector"

  skip_unknown_fields = true
  healthcheck = true

  compression = "gzip"

  encoding.timestamp_format = "unix"

  buffer.type = "disk"
  buffer.max_size = 104900000
  buffer.when_full = "block"

  batch.max_bytes = 1049000
  batch.max_events = 500
  batch.timeout_secs = 1